package com.zaynah.savetravels.models;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.format.annotation.DateTimeFormat;

@Entity
@Table(name="expenses")
public class Expense {
	// attributes, vendor, amount, expenseName
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @NotNull
    @Size(min = 5, max = 200)
    private String vendor;
    
    @NotNull
    @Size(min = 5, max = 200, message="Field must be beetween 5 and 200")
    private String expenseName;
    
    @NotNull
    @Min(1)
    private Integer amount;
    
    @Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date createdAt;
    
    
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;

    /// constructors 

	public Expense() {
		// TODO Auto-generated constructor stub
	}



	public Expense(@NotNull @Size(min = 5, max = 200) String vendor,
			@NotNull @Size(min = 5, max = 200, message = "Field must be beetween 5 and 200") String expenseName,
			@NotNull @Min(1) Integer amount) {
		this.vendor = vendor;
		this.expenseName = expenseName;
		this.amount = amount;
	}

///getters and setters 

	public Long getId() {
		return id;
	}



	public void setId(Long id) {
		this.id = id;
	}



	public String getVendor() {
		return vendor;
	}



	public void setVendor(String vendor) {
		this.vendor = vendor;
	}



	public String getExpenseName() {
		return expenseName;
	}



	public void setExpenseName(String expenseName) {
		this.expenseName = expenseName;
	}



	public Integer getAmount() {
		return amount;
	}



	public void setAmount(Integer amount) {
		this.amount = amount;
	}



	public Date getCreatedAt() {
		return createdAt;
	}



	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}



	public Date getUpdatedAt() {
		return updatedAt;
	}



	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}
	
	// other methods 
	
    @PrePersist
    protected void onCreate(){
        this.createdAt = new Date();
    }
    @PreUpdate
    protected void onUpdate(){
        this.updatedAt = new Date();
    }

}
